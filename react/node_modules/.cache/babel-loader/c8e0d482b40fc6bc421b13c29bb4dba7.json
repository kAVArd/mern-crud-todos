{"ast":null,"code":"var _jsxFileName = \"/home/ilya/Desktop/mern-crud-todo/src/components/todos-table.component.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport todoListContainer from '../containers/todosList.container';\nimport { PropTypes } from 'prop-types';\n\nconst TodosTable = ({\n  todoList\n}) => {\n  console.log(todoList);\n\n  const PrintTable = todoList => {\n    if (todoList === undefined) {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      });\n    } else {\n      return todoList.map(todo => {\n        return React.createElement(\"tr\", {\n          key: todo._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, todo.todoDescription), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, todo.todoResponsible), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, todo.todoPriority), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, todo.todoCompleted));\n      });\n    }\n  };\n\n  return React.createElement(\"table\", {\n    className: \"table table-hover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Description\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Responsible\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Priority\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Completed\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Actions\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, PrintTable()));\n};\n\nTodosTable.protypes = {\n  todoList: PropTypes.array\n};\nexport default connect(todoListContainer.mapStateToProps)(TodosTable);","map":{"version":3,"sources":["/home/ilya/Desktop/mern-crud-todo/src/components/todos-table.component.js"],"names":["React","connect","todoListContainer","PropTypes","TodosTable","todoList","console","log","PrintTable","undefined","map","todo","_id","todoDescription","todoResponsible","todoPriority","todoCompleted","protypes","array","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAEnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAEI,QAAMG,UAAU,GAAIH,QAAD,IAAc;AAC7B,QAAIA,QAAQ,KAAKI,SAAjB,EAA4B;AACxB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJD,MAIO;AACH,aAAOJ,QAAQ,CAACK,GAAT,CAAaC,IAAI,IAAI;AACxB,eACI;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,IAAI,CAACE,eAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,IAAI,CAACG,eAAV,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,IAAI,CAACI,YAAV,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKJ,IAAI,CAACK,aAAV,CAJJ,CADJ;AAQH,OATM,CAAP;AAUH;AACJ,GAjBD;;AAmBA,SACI;AAAO,IAAA,SAAS,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,CADJ,CADR,EAUQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,UAAU,EADf,CAVR,CADJ;AAgBH,CAvCD;;AAyCAJ,UAAU,CAACa,QAAX,GAAsB;AAClBZ,EAAAA,QAAQ,EAAEF,SAAS,CAACe;AADF,CAAtB;AAIA,eAAejB,OAAO,CAACC,iBAAiB,CAACiB,eAAnB,CAAP,CAA2Cf,UAA3C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport todoListContainer from '../containers/todosList.container';\nimport { PropTypes } from 'prop-types';\n\nconst TodosTable = ({todoList}) => {\n\nconsole.log(todoList);\n\n    const PrintTable = (todoList) => {\n        if (todoList === undefined) {\n            return (\n                <tr></tr>\n            )\n        } else {\n            return todoList.map(todo => {\n                return (\n                    <tr key={todo._id}>\n                        <td>{todo.todoDescription}</td>\n                        <td>{todo.todoResponsible}</td>\n                        <td>{todo.todoPriority}</td>\n                        <td>{todo.todoCompleted}</td>\n                    </tr>\n                )\n            })\n        }\n    }\n\n    return (\n        <table className='table table-hover'>\n                <thead>\n                    <tr>\n                        <th>Description</th>\n                        <th>Responsible</th>\n                        <th>Priority</th>\n                        <th>Completed</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {PrintTable()}\n                </tbody>\n            </table>\n    )\n}\n\nTodosTable.protypes = {\n    todoList: PropTypes.array,\n}\n\nexport default connect(todoListContainer.mapStateToProps)(TodosTable);"]},"metadata":{},"sourceType":"module"}