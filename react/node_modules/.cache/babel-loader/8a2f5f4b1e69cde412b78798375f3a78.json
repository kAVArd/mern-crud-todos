{"ast":null,"code":"import _objectSpread from \"/home/ilya/Desktop/mern-crud-todo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport { FETCH_TODO, UPDATE_TODO_COMPLETED, UPDATE_TODO_DESCRIPTION, UPDATE_TODO_PRIORITY, UPDATE_TODO_RESPONSIBLE } from '../actions/editTodo.actions';\nconst initState = {\n  todoDescription: '',\n  todoPriority: '',\n  todoResponsible: '',\n  todoCompleted: false\n};\n\nconst editTodo = (state = initState, action) => {\n  switch (action.type) {\n    case UPDATE_TODO_DESCRIPTION_UPDATE:\n      return _objectSpread({}, state, {\n        todoDescriptionUpdate: action.description\n      });\n\n    case UPDATE_TODO_RESPONSIBLE_UPDATE:\n      return _objectSpread({}, state, {\n        todoResponsibleUpdate: action.responsible\n      });\n\n    case UPDATE_TODO_PRIORITY_UPDATE:\n      return _objectSpread({}, state, {\n        todoPriorityUpdate: action.priority\n      });\n\n    case FETCH_TODO:\n      return action.payload;\n\n    case UPDATE_TODO_COMPLETED:\n      return _objectSpread({}, state, {\n        todoCompletedUpdate: action.completed\n      });\n\n    case 'update':\n      const updatedTodo = {};\n\n      for (let key in state) {\n        updatedTodo[key] = state[key];\n      }\n\n      axios.post('http://localhost/todos/update/' + action.payload.id, updatedTodo).then(response => {\n        console.log(response);\n      });\n      break;\n\n    default:\n      return state;\n  }\n};\n\nexport default editTodo;","map":{"version":3,"sources":["/home/ilya/Desktop/mern-crud-todo/src/reducers/editTodo.reducer.js"],"names":["axios","FETCH_TODO","UPDATE_TODO_COMPLETED","UPDATE_TODO_DESCRIPTION","UPDATE_TODO_PRIORITY","UPDATE_TODO_RESPONSIBLE","initState","todoDescription","todoPriority","todoResponsible","todoCompleted","editTodo","state","action","type","UPDATE_TODO_DESCRIPTION_UPDATE","todoDescriptionUpdate","description","UPDATE_TODO_RESPONSIBLE_UPDATE","todoResponsibleUpdate","responsible","UPDATE_TODO_PRIORITY_UPDATE","todoPriorityUpdate","priority","payload","todoCompletedUpdate","completed","updatedTodo","key","post","id","then","response","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAoBC,qBAApB,EAA2CC,uBAA3C,EAAoEC,oBAApE,EACIC,uBADJ,QACkC,6BADlC;AAGA,MAAMC,SAAS,GAAG;AACdC,EAAAA,eAAe,EAAE,EADH;AAEdC,EAAAA,YAAY,EAAE,EAFA;AAGdC,EAAAA,eAAe,EAAE,EAHH;AAIdC,EAAAA,aAAa,EAAE;AAJD,CAAlB;;AAOA,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAACN,SAAP,EAAkBO,MAAlB,KAA6B;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKC,8BAAL;AACI,+BACOH,KADP;AAEII,QAAAA,qBAAqB,EAAEH,MAAM,CAACI;AAFlC;;AAIJ,SAAKC,8BAAL;AACQ,+BACON,KADP;AAEIO,QAAAA,qBAAqB,EAAEN,MAAM,CAACO;AAFlC;;AAIR,SAAKC,2BAAL;AACQ,+BACWT,KADX;AAEIU,QAAAA,kBAAkB,EAAET,MAAM,CAACU;AAF/B;;AAIR,SAAKtB,UAAL;AACI,aAAOY,MAAM,CAACW,OAAd;;AACJ,SAAKtB,qBAAL;AACQ,+BACOU,KADP;AAEIa,QAAAA,mBAAmB,EAAEZ,MAAM,CAACa;AAFhC;;AAIR,SAAK,QAAL;AACI,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,IAAIC,GAAT,IAAgBhB,KAAhB,EAAuB;AACnBe,QAAAA,WAAW,CAACC,GAAD,CAAX,GAAmBhB,KAAK,CAACgB,GAAD,CAAxB;AACH;;AACD5B,MAAAA,KAAK,CAAC6B,IAAN,CAAW,mCAAmChB,MAAM,CAACW,OAAP,CAAeM,EAA7D,EAAiEH,WAAjE,EACKI,IADL,CACWC,QAAQ,IAAI;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,OAHL;AAIA;;AAEJ;AACI,aAAOpB,KAAP;AApCR;AAsCH,CAvCD;;AAyCA,eAAeD,QAAf","sourcesContent":["import axios from 'axios';\nimport {FETCH_TODO, UPDATE_TODO_COMPLETED, UPDATE_TODO_DESCRIPTION, UPDATE_TODO_PRIORITY,\n    UPDATE_TODO_RESPONSIBLE} from '../actions/editTodo.actions';\n\nconst initState = {\n    todoDescription: '',\n    todoPriority: '',\n    todoResponsible: '',\n    todoCompleted: false,\n}\n\nconst editTodo = (state=initState, action) => {\n    switch (action.type) {\n        case UPDATE_TODO_DESCRIPTION_UPDATE:\n            return {\n                ...state,\n                todoDescriptionUpdate: action.description,\n            }\n        case UPDATE_TODO_RESPONSIBLE_UPDATE:\n                return {\n                    ...state,\n                    todoResponsibleUpdate: action.responsible,\n                }\n        case UPDATE_TODO_PRIORITY_UPDATE:\n                return {\n                        ...state,\n                    todoPriorityUpdate: action.priority,\n                }\n        case FETCH_TODO:\n            return action.payload;\n        case UPDATE_TODO_COMPLETED: \n                return {\n                    ...state,\n                    todoCompletedUpdate: action.completed,\n                }\n        case 'update':\n            const updatedTodo = {};\n\n            for (let key in state) {\n                updatedTodo[key] = state[key];\n            }\n            axios.post('http://localhost/todos/update/' + action.payload.id, updatedTodo)\n                .then( response => {\n                    console.log(response);\n                });\n            break;\n        \n        default:\n            return state;\n    }\n}\n\nexport default editTodo;"]},"metadata":{},"sourceType":"module"}