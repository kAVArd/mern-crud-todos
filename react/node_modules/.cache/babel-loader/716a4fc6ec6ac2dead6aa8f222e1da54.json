{"ast":null,"code":"import _objectSpread from \"/home/ilya/Desktop/mern-crud-todo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from \"axios\";\nconst initState = {\n  todoDescription: '',\n  todoResponsible: '',\n  todoPriority: '',\n  todoCompleted: false,\n  res: ''\n};\n\nconst createTodo = (state = initState, action) => {\n  switch (action.type) {\n    case 'changeTodoDescription':\n      return _objectSpread({}, state, {\n        todoDescription: action.description\n      });\n\n    case 'changeTodoResponsible':\n      return _objectSpread({}, state, {\n        todoResponsible: action.responsible\n      });\n\n    case 'changeTodoPriority':\n      return _objectSpread({}, state, {\n        todoPriority: action.priority\n      });\n\n    case 'submit':\n      const takeResponse = async state => {\n        const newTodo = {};\n\n        for (let key in state) newTodo[key] = state[key];\n\n        return await axios.post('http://localhost:4000/todos/add', newTodo).then(res => {\n          return res;\n        }).catch(err => {\n          return err;\n        });\n      };\n\n      return _objectSpread({}, initState, {\n        res: takeResponse()\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default createTodo;","map":{"version":3,"sources":["/home/ilya/Desktop/mern-crud-todo/src/reducers/createTodo.reducer.js"],"names":["axios","initState","todoDescription","todoResponsible","todoPriority","todoCompleted","res","createTodo","state","action","type","description","responsible","priority","takeResponse","newTodo","key","post","then","catch","err"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,eAAe,EAAE,EADH;AAEdC,EAAAA,eAAe,EAAE,EAFH;AAGdC,EAAAA,YAAY,EAAE,EAHA;AAIdC,EAAAA,aAAa,EAAE,KAJD;AAKdC,EAAAA,GAAG,EAAE;AALS,CAAlB;;AAQA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGP,SAAT,EAAoBQ,MAApB,KAA+B;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,uBAAL;AACI,+BACOF,KADP;AAEIN,QAAAA,eAAe,EAAEO,MAAM,CAACE;AAF5B;;AAIJ,SAAK,uBAAL;AACI,+BACOH,KADP;AAEIL,QAAAA,eAAe,EAAEM,MAAM,CAACG;AAF5B;;AAIJ,SAAK,oBAAL;AACI,+BACQJ,KADR;AAEIJ,QAAAA,YAAY,EAAEK,MAAM,CAACI;AAFzB;;AAIJ,SAAK,QAAL;AACI,YAAMC,YAAY,GAAG,MAAON,KAAP,IAAiB;AAClC,cAAMO,OAAO,GAAG,EAAhB;;AAEA,aAAK,IAAIC,GAAT,IAAgBR,KAAhB,EAAuBO,OAAO,CAACC,GAAD,CAAP,GAAeR,KAAK,CAACQ,GAAD,CAApB;;AAEvB,eAAO,MAAMhB,KAAK,CAACiB,IAAN,CAAW,iCAAX,EAA8CF,OAA9C,EACRG,IADQ,CACHZ,GAAG,IAAI;AACT,iBAAOA,GAAP;AACH,SAHQ,EAIRa,KAJQ,CAIFC,GAAG,IAAI;AACV,iBAAOA,GAAP;AACH,SANQ,CAAb;AAOH,OAZD;;AAcA,+BACOnB,SADP;AAEIK,QAAAA,GAAG,EAAEQ,YAAY;AAFrB;;AAIJ;AACI,aAAON,KAAP;AApCR;AAsCH,CAvCD;;AAyCA,eAAeD,UAAf","sourcesContent":["import axios from \"axios\";\n\nconst initState = {\n    todoDescription: '',\n    todoResponsible: '',\n    todoPriority: '',\n    todoCompleted: false,\n    res: '',\n};\n\nconst createTodo = (state = initState, action) => {\n    switch (action.type) {\n        case 'changeTodoDescription':\n            return {\n                ...state,\n                todoDescription: action.description,\n            };\n        case 'changeTodoResponsible':\n            return {\n                ...state,\n                todoResponsible: action.responsible,\n            }\n        case 'changeTodoPriority':\n            return {\n                 ...state,\n                todoPriority: action.priority,\n            }\n        case 'submit':\n            const takeResponse = async (state) => {\n                const newTodo = {};\n\n                for (let key in state) newTodo[key] = state[key];\n\n                return await axios.post('http://localhost:4000/todos/add', newTodo)\n                    .then(res => {\n                        return res;\n                    })\n                    .catch(err => {\n                        return err;\n                    });\n            }\n\n            return {\n                ...initState,\n                res: takeResponse(),\n            }\n        default:\n            return state;\n    }\n}\n\nexport default createTodo;"]},"metadata":{},"sourceType":"module"}