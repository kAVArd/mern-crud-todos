{"ast":null,"code":"import _objectSpread from \"/home/ilya/Desktop/mern-crud-todo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport { FETCH_TODO, CHANGE_TODO_COMPLETED } from '../actions/editTodo.actions';\nimport '../actions/editTodo.actions';\nconst initState = {\n  todoDescriptionUpdate: '',\n  todoPriorityUpdate: '',\n  todoResponsibleUpdate: '',\n  todoCompletedUpdate: false\n};\n\nconst editTodo = (state = initState, action) => {\n  switch (action.type) {\n    case CHANGE_TODO_DESCRIPTION:\n      return _objectSpread({}, state, {\n        todoDescriptionUpdate: action.description\n      });\n\n    case CHANGE_TODO_RESPONSIBLE:\n      return _objectSpread({}, state, {\n        todoResponsibleUpdate: action.responsible\n      });\n\n    case CHANGE_TODO_PRIORITY:\n      return _objectSpread({}, state, {\n        todoPriorityUpdate: action.priority\n      });\n\n    case FETCH_TODO:\n      return action.payload;\n\n    case CHANGE_TODO_COMPLETED:\n      return _objectSpread({}, state, {\n        todoCompletedUpdate: action.completed\n      });\n\n    case 'update':\n      const updatedTodo = {};\n\n      for (let key in state) {\n        updatedTodo[key] = state[key];\n      }\n\n      axios.post('http://localhost/todos/update/' + action.payload.id, updatedTodo).then(response => {\n        console.log(response);\n      });\n      break;\n\n    default:\n      return state;\n  }\n};\n\nexport default editTodo;","map":{"version":3,"sources":["/home/ilya/Desktop/mern-crud-todo/src/reducers/editTodo.reducer.js"],"names":["axios","FETCH_TODO","CHANGE_TODO_COMPLETED","initState","todoDescriptionUpdate","todoPriorityUpdate","todoResponsibleUpdate","todoCompletedUpdate","editTodo","state","action","type","CHANGE_TODO_DESCRIPTION","description","CHANGE_TODO_RESPONSIBLE","responsible","CHANGE_TODO_PRIORITY","priority","payload","completed","updatedTodo","key","post","id","then","response","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAoBC,qBAApB,QAAgD,6BAAhD;AACA,OAAe,6BAAf;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,qBAAqB,EAAE,EADT;AAEdC,EAAAA,kBAAkB,EAAE,EAFN;AAGdC,EAAAA,qBAAqB,EAAE,EAHT;AAIdC,EAAAA,mBAAmB,EAAE;AAJP,CAAlB;;AAOA,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAACN,SAAP,EAAkBO,MAAlB,KAA6B;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKC,uBAAL;AACI,+BACOH,KADP;AAEIL,QAAAA,qBAAqB,EAAEM,MAAM,CAACG;AAFlC;;AAIJ,SAAKC,uBAAL;AACQ,+BACOL,KADP;AAEIH,QAAAA,qBAAqB,EAAEI,MAAM,CAACK;AAFlC;;AAIR,SAAKC,oBAAL;AACQ,+BACWP,KADX;AAEIJ,QAAAA,kBAAkB,EAAEK,MAAM,CAACO;AAF/B;;AAIR,SAAKhB,UAAL;AACI,aAAOS,MAAM,CAACQ,OAAd;;AACJ,SAAKhB,qBAAL;AACQ,+BACOO,KADP;AAEIF,QAAAA,mBAAmB,EAAEG,MAAM,CAACS;AAFhC;;AAIR,SAAK,QAAL;AACI,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,IAAIC,GAAT,IAAgBZ,KAAhB,EAAuB;AACnBW,QAAAA,WAAW,CAACC,GAAD,CAAX,GAAmBZ,KAAK,CAACY,GAAD,CAAxB;AACH;;AACDrB,MAAAA,KAAK,CAACsB,IAAN,CAAW,mCAAmCZ,MAAM,CAACQ,OAAP,CAAeK,EAA7D,EAAiEH,WAAjE,EACKI,IADL,CACWC,QAAQ,IAAI;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,OAHL;AAIA;;AAEJ;AACI,aAAOhB,KAAP;AApCR;AAsCH,CAvCD;;AAyCA,eAAeD,QAAf","sourcesContent":["import axios from 'axios';\nimport {FETCH_TODO, CHANGE_TODO_COMPLETED} from '../actions/editTodo.actions';\nimport {} from '../actions/editTodo.actions'\n\nconst initState = {\n    todoDescriptionUpdate: '',\n    todoPriorityUpdate: '',\n    todoResponsibleUpdate: '',\n    todoCompletedUpdate: false,\n}\n\nconst editTodo = (state=initState, action) => {\n    switch (action.type) {\n        case CHANGE_TODO_DESCRIPTION:\n            return {\n                ...state,\n                todoDescriptionUpdate: action.description,\n            }\n        case CHANGE_TODO_RESPONSIBLE:\n                return {\n                    ...state,\n                    todoResponsibleUpdate: action.responsible,\n                }\n        case CHANGE_TODO_PRIORITY:\n                return {\n                        ...state,\n                    todoPriorityUpdate: action.priority,\n                }\n        case FETCH_TODO:\n            return action.payload;\n        case CHANGE_TODO_COMPLETED: \n                return {\n                    ...state,\n                    todoCompletedUpdate: action.completed,\n                }\n        case 'update':\n            const updatedTodo = {};\n\n            for (let key in state) {\n                updatedTodo[key] = state[key];\n            }\n            axios.post('http://localhost/todos/update/' + action.payload.id, updatedTodo)\n                .then( response => {\n                    console.log(response);\n                });\n            break;\n        \n        default:\n            return state;\n    }\n}\n\nexport default editTodo;"]},"metadata":{},"sourceType":"module"}