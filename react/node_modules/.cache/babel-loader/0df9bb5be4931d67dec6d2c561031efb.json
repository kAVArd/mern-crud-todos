{"ast":null,"code":"import { changeTodoDescription, changeTodoResponsible, changeTodoPriority } from '../actions/createTodo.actions';\nimport { changeTodoCompleted, fetchTodo } from '../actions/editTodo.actions';\nconst editTodoContainer = {\n  mapStateToProps: state => ({\n    todoPriority: state.editTodo.todoPriority,\n    todoDescription: state.editTodo.todoDescription,\n    todoResponsible: state.editTodo.todoResponsible,\n    todoCompleted: state.editTodo.todoCompleted,\n    isFetched: state.editTodo.isFetched\n  }),\n  mapDispatchToProps: dispatch => ({\n    changeTodoDescription: event => dispatch(changeTodoDescription(event)),\n    changeTodoResponsible: event => dispatch(changeTodoResponsible(event)),\n    changeTodoPriority: event => dispatch(changeTodoPriority(event)),\n    changeTodoCompleted: event => dispatch(changeTodoCompleted(event)),\n    fetchTodo: id => dispatch(fetchTodo(id)),\n    update: () => dispatch({\n      type: 'update'\n    })\n  })\n};\nexport default editTodoContainer;","map":{"version":3,"sources":["/home/ilya/Desktop/mern-crud-todo/src/containers/editTodo.container.js"],"names":["changeTodoDescription","changeTodoResponsible","changeTodoPriority","changeTodoCompleted","fetchTodo","editTodoContainer","mapStateToProps","state","todoPriority","editTodo","todoDescription","todoResponsible","todoCompleted","isFetched","mapDispatchToProps","dispatch","event","id","update","type"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,qBAAhC,EAAuDC,kBAAvD,QAAgF,+BAAhF;AACA,SAAQC,mBAAR,EAA6BC,SAA7B,QAA6C,6BAA7C;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,eAAe,EAAEC,KAAK,KAAK;AACvBC,IAAAA,YAAY,EAAED,KAAK,CAACE,QAAN,CAAeD,YADN;AAEvBE,IAAAA,eAAe,EAAEH,KAAK,CAACE,QAAN,CAAeC,eAFT;AAGvBC,IAAAA,eAAe,EAAEJ,KAAK,CAACE,QAAN,CAAeE,eAHT;AAIvBC,IAAAA,aAAa,EAAEL,KAAK,CAACE,QAAN,CAAeG,aAJP;AAKvBC,IAAAA,SAAS,EAAEN,KAAK,CAACE,QAAN,CAAeI;AALH,GAAL,CADA;AAQtBC,EAAAA,kBAAkB,EAAEC,QAAQ,KAAK;AACzBf,IAAAA,qBAAqB,EAAGgB,KAAD,IAAWD,QAAQ,CAACf,qBAAqB,CAACgB,KAAD,CAAtB,CADjB;AAEzBf,IAAAA,qBAAqB,EAAGe,KAAD,IAAWD,QAAQ,CAACd,qBAAqB,CAACe,KAAD,CAAtB,CAFjB;AAGzBd,IAAAA,kBAAkB,EAAGc,KAAD,IAAWD,QAAQ,CAACb,kBAAkB,CAACc,KAAD,CAAnB,CAHd;AAIzBb,IAAAA,mBAAmB,EAAGa,KAAD,IAAWD,QAAQ,CAACZ,mBAAmB,CAACa,KAAD,CAApB,CAJf;AAKzBZ,IAAAA,SAAS,EAAGa,EAAD,IAAQF,QAAQ,CAACX,SAAS,CAACa,EAAD,CAAV,CALF;AAMzBC,IAAAA,MAAM,EAAE,MAAMH,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAE;AAAP,KAAD;AANG,GAAL;AARN,CAA1B;AAkBA,eAAed,iBAAf","sourcesContent":["import { changeTodoDescription, changeTodoResponsible, changeTodoPriority} from '../actions/createTodo.actions';\nimport {changeTodoCompleted, fetchTodo} from '../actions/editTodo.actions';\n\nconst editTodoContainer = {\n    mapStateToProps: state => ({\n        todoPriority: state.editTodo.todoPriority,\n        todoDescription: state.editTodo.todoDescription,\n        todoResponsible: state.editTodo.todoResponsible,\n        todoCompleted: state.editTodo.todoCompleted,\n        isFetched: state.editTodo.isFetched,\n    }),\n    mapDispatchToProps: dispatch => ({\n            changeTodoDescription: (event) => dispatch(changeTodoDescription(event)),\n            changeTodoResponsible: (event) => dispatch(changeTodoResponsible(event)),\n            changeTodoPriority: (event) => dispatch(changeTodoPriority(event)),\n            changeTodoCompleted: (event) => dispatch(changeTodoCompleted(event)),\n            fetchTodo: (id) => dispatch(fetchTodo(id)),\n            update: () => dispatch({type: 'update'}),\n    })\n}\n\nexport default editTodoContainer;"]},"metadata":{},"sourceType":"module"}