{"ast":null,"code":"import _objectSpread from \"/home/ilya/Desktop/mern-crud-todo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport { FETCH_TODO, CHANGE_TODO_COMPLETED } from '../actions/editTodo.actions';\nimport { CHANGE_TODO_DESCRIPTION, CHANGE_TODO_PRIORITY, CHANGE_TODO_RESPONSIBLE } from '../actions/createTodo.actions';\nconst initState = {\n  todoDescription: '',\n  todoPriority: '',\n  todoResponsible: '',\n  todoCompleted: false\n};\n\nconst editTodo = (state = initState, action) => {\n  switch (action.type) {\n    case CHANGE_TODO_DESCRIPTION:\n      console.log(action.description);\n      return _objectSpread({}, state, {\n        todoDescription: action.description\n      });\n\n    case CHANGE_TODO_RESPONSIBLE:\n      return _objectSpread({}, state, {\n        todoResponsible: action.responsible\n      });\n\n    case CHANGE_TODO_PRIORITY:\n      return _objectSpread({}, state, {\n        todoPriority: action.priority\n      });\n\n    case FETCH_TODO:\n      return action.payload;\n\n    case CHANGE_TODO_COMPLETED:\n      return _objectSpread({}, state, {\n        todoCompleted: action.completed\n      });\n\n    case 'update':\n      const updatedTodo = {};\n\n      for (let key in state) {\n        updatedTodo[key] = state[key];\n      }\n\n      axios.post('http://localhost/todos/update/' + action.payload.id, updatedTodo).then(response => {\n        console.log(response);\n      });\n      break;\n\n    default:\n      return state;\n  }\n};\n\nexport default editTodo;","map":{"version":3,"sources":["/home/ilya/Desktop/mern-crud-todo/src/reducers/editTodo.reducer.js"],"names":["axios","FETCH_TODO","CHANGE_TODO_COMPLETED","CHANGE_TODO_DESCRIPTION","CHANGE_TODO_PRIORITY","CHANGE_TODO_RESPONSIBLE","initState","todoDescription","todoPriority","todoResponsible","todoCompleted","editTodo","state","action","type","console","log","description","responsible","priority","payload","completed","updatedTodo","key","post","id","then","response"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAoBC,qBAApB,QAAgD,6BAAhD;AACA,SAAQC,uBAAR,EAAiCC,oBAAjC,EAAuDC,uBAAvD,QAAqF,+BAArF;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,eAAe,EAAE,EADH;AAEdC,EAAAA,YAAY,EAAE,EAFA;AAGdC,EAAAA,eAAe,EAAE,EAHH;AAIdC,EAAAA,aAAa,EAAE;AAJD,CAAlB;;AAOA,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAACN,SAAP,EAAkBO,MAAlB,KAA6B;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,uBAAL;AACIY,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,WAAnB;AACA,+BACOL,KADP;AAEIL,QAAAA,eAAe,EAAEM,MAAM,CAACI;AAF5B;;AAIJ,SAAKZ,uBAAL;AACQ,+BACOO,KADP;AAEIH,QAAAA,eAAe,EAAEI,MAAM,CAACK;AAF5B;;AAIR,SAAKd,oBAAL;AACQ,+BACWQ,KADX;AAEIJ,QAAAA,YAAY,EAAEK,MAAM,CAACM;AAFzB;;AAIR,SAAKlB,UAAL;AACI,aAAOY,MAAM,CAACO,OAAd;;AACJ,SAAKlB,qBAAL;AACQ,+BACOU,KADP;AAEIF,QAAAA,aAAa,EAAEG,MAAM,CAACQ;AAF1B;;AAIR,SAAK,QAAL;AACI,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAK,IAAIC,GAAT,IAAgBX,KAAhB,EAAuB;AACnBU,QAAAA,WAAW,CAACC,GAAD,CAAX,GAAmBX,KAAK,CAACW,GAAD,CAAxB;AACH;;AACDvB,MAAAA,KAAK,CAACwB,IAAN,CAAW,mCAAmCX,MAAM,CAACO,OAAP,CAAeK,EAA7D,EAAiEH,WAAjE,EACKI,IADL,CACWC,QAAQ,IAAI;AACfZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,QAAZ;AACH,OAHL;AAIA;;AAEJ;AACI,aAAOf,KAAP;AArCR;AAuCH,CAxCD;;AA0CA,eAAeD,QAAf","sourcesContent":["import axios from 'axios';\nimport {FETCH_TODO, CHANGE_TODO_COMPLETED} from '../actions/editTodo.actions';\nimport {CHANGE_TODO_DESCRIPTION, CHANGE_TODO_PRIORITY, CHANGE_TODO_RESPONSIBLE} from '../actions/createTodo.actions'\n\nconst initState = {\n    todoDescription: '',\n    todoPriority: '',\n    todoResponsible: '',\n    todoCompleted: false,\n}\n\nconst editTodo = (state=initState, action) => {\n    switch (action.type) {\n        case CHANGE_TODO_DESCRIPTION:\n            console.log(action.description);\n            return {\n                ...state,\n                todoDescription: action.description,\n            }\n        case CHANGE_TODO_RESPONSIBLE:\n                return {\n                    ...state,\n                    todoResponsible: action.responsible,\n                }\n        case CHANGE_TODO_PRIORITY:\n                return {\n                        ...state,\n                    todoPriority: action.priority,\n                }\n        case FETCH_TODO:\n            return action.payload;\n        case CHANGE_TODO_COMPLETED: \n                return {\n                    ...state,\n                    todoCompleted: action.completed,\n                }\n        case 'update':\n            const updatedTodo = {};\n\n            for (let key in state) {\n                updatedTodo[key] = state[key];\n            }\n            axios.post('http://localhost/todos/update/' + action.payload.id, updatedTodo)\n                .then( response => {\n                    console.log(response);\n                });\n            break;\n        \n        default:\n            return state;\n    }\n}\n\nexport default editTodo;"]},"metadata":{},"sourceType":"module"}