{"ast":null,"code":"import _objectSpread from \"/home/ilya/Desktop/mern-crud-todo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from \"axios\";\nconst initState = {\n  todoDescription: '',\n  todoResponsible: '',\n  todoPriority: '',\n  todoCompleted: false,\n  res: ''\n};\n\nconst createTodo = (state = initState, action) => {\n  switch (action.type) {\n    case 'changeTodoDescription':\n      return _objectSpread({}, state, {\n        todoDescription: action.description\n      });\n\n    case 'changeTodoResponsible':\n      return _objectSpread({}, state, {\n        todoResponsible: action.responsible\n      });\n\n    case 'changeTodoPriority':\n      return _objectSpread({}, state, {\n        todoPriority: action.priority\n      });\n\n    case 'submit':\n      const newTodo = {};\n\n      for (let key in state) {\n        newTodo[key] = state[key];\n      }\n\n      const response = axios.post('http://localhost:4000/todos/add', newTodo).then(res => {\n        return initState;\n      }).catch(err => {\n        console.log(err);\n      });\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default createTodo;","map":{"version":3,"sources":["/home/ilya/Desktop/mern-crud-todo/src/reducers/createTodo.reducer.js"],"names":["axios","initState","todoDescription","todoResponsible","todoPriority","todoCompleted","res","createTodo","state","action","type","description","responsible","priority","newTodo","key","response","post","then","catch","err","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,eAAe,EAAE,EADH;AAEdC,EAAAA,eAAe,EAAE,EAFH;AAGdC,EAAAA,YAAY,EAAE,EAHA;AAIdC,EAAAA,aAAa,EAAE,KAJD;AAKdC,EAAAA,GAAG,EAAE;AALS,CAAlB;;AAQA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGP,SAAT,EAAoBQ,MAApB,KAA+B;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,uBAAL;AACI,+BACOF,KADP;AAEIN,QAAAA,eAAe,EAAEO,MAAM,CAACE;AAF5B;;AAIJ,SAAK,uBAAL;AACI,+BACOH,KADP;AAEIL,QAAAA,eAAe,EAAEM,MAAM,CAACG;AAF5B;;AAIJ,SAAK,oBAAL;AACI,+BACQJ,KADR;AAEIJ,QAAAA,YAAY,EAAEK,MAAM,CAACI;AAFzB;;AAIJ,SAAK,QAAL;AACI,YAAMC,OAAO,GAAG,EAAhB;;AAEA,WAAK,IAAIC,GAAT,IAAgBP,KAAhB,EAAuB;AACnBM,QAAAA,OAAO,CAACC,GAAD,CAAP,GAAeP,KAAK,CAACO,GAAD,CAApB;AACH;;AAED,YAAMC,QAAQ,GAAGhB,KAAK,CAACiB,IAAN,CAAW,iCAAX,EAA8CH,OAA9C,EACZI,IADY,CACPZ,GAAG,IAAI;AACT,eAAOL,SAAP;AACH,OAHY,EAIZkB,KAJY,CAINC,GAAG,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OANY,CAAjB;AAQA,aAAOZ,KAAP;;AACJ;AACI,aAAOA,KAAP;AAjCR;AAmCH,CApCD;;AAsCA,eAAeD,UAAf","sourcesContent":["import axios from \"axios\";\n\nconst initState = {\n    todoDescription: '',\n    todoResponsible: '',\n    todoPriority: '',\n    todoCompleted: false,\n    res: '',\n};\n\nconst createTodo = (state = initState, action) => {\n    switch (action.type) {\n        case 'changeTodoDescription':\n            return {\n                ...state,\n                todoDescription: action.description,\n            };\n        case 'changeTodoResponsible':\n            return {\n                ...state,\n                todoResponsible: action.responsible,\n            }\n        case 'changeTodoPriority':\n            return {\n                 ...state,\n                todoPriority: action.priority,\n            }\n        case 'submit':\n            const newTodo = {};\n\n            for (let key in state) {\n                newTodo[key] = state[key];\n            }\n            \n            const response = axios.post('http://localhost:4000/todos/add', newTodo)\n                .then(res => {\n                    return initState;\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n            \n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default createTodo;"]},"metadata":{},"sourceType":"module"}